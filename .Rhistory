geom_map(aes(x =  long, y = lat, map_id = region), map = state_map)
ggplot(data = state_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map)
ggplot(data = state_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot(data = state_map)+
geom_map(aes(x =  long, y = lat), map = us_map, colour="cyan",size = 0.5)
ggplot(data = state_map)+
geom_map(aes(x =  long, y = lat, map_id = group), map = us_map, colour="cyan",size = 0.5)
ggplot(data = state_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot()+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot()+
geom_map(us_mapaes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot()+
geom_map(us_map, aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot(us_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot(us_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
scale_fill_distiller(palette = "RdPu",direction= 1)
ggplot(us_map)+
geom_map( data = us_map, aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
scale_fill_distiller(palette = "RdPu",direction= 1)
ggplot(us_map)+
geom_map( data = us_map, aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
state_map <- merge(us_map, election_data_train, by.x = "State", by.y = "State", all.x = TRUE)
ggplot(state_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
ggplot(state_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
?
>
ggplot(state_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
>
ggplot(state_map)+
geom_map(aes(x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
geom_text(aes(x = long, y = lat, label = WinStatus), size = 4)
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
geom_text(aes(x = long, y = lat, label = Obama_wins), size = 4)
>
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
geom_text(aes(x = long, y = lat, label = Obama_wins), size = 4)
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
geom_text(aes(x = long, y = lat, label = Obama_wins), size = 4)
>
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)+
geom_text(aes(x = long, y = lat, label = Obama_wins), size = 4)
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="cyan",size = 0.5)
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white",size = 0.5)
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white",size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour=win,size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour=Obama_wins ,size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour=Obama_wins, size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region, colour=Obama_wins), map = us_map, size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5, alpha = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region, colour="region"), map = us_map, size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Obama_margin, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
theme_void()
names(state_map)
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "USA Win Status Map", fill = "Poverty Rate", label = "Winning Status") +
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "USA Win Status Map", fill = "Poverty Rate") +
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "USA Win Status Map", fill = "Margin(%)") +
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(fill = "Poverty Rate") +
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(fill = "Poverty Rate") +
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), fill = "cyan",map = us_map, colour="white", size = 0.5)+
labs(fill = "Poverty Rate") +
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(fill = "Poverty Rate") +
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "Obama's Margin in States", fill = "Margin(%)") +
theme_void()
ggplot(state_map)+
geom_map(aes(fill = Poverty, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "Poverty Rate in States", fill = "Poverty Rate") +
theme_void()
plot2data <- election_data_train %>%
group_by(State) %>%
summarize(vote_obama = mean(Obama/TotalVote),
Poverty = mean(Poverty))%>%
pivot_longer(-c(1,2), names_to = "type", values_to = "percent")
plot2data
plot2data <- election_data_train %>%
group_by(State) %>%
summarize(vote_obama = mean(Obama/TotalVote),
Poverty = mean(Poverty))
plot2data
ggplot(data = plot2data)+
geom_col(aes(x = as.character(vote_obama), y = Poverty, fill = type))
ggplot(data = plot2data)+
geom_col(aes(x = Poverty, y = vote_obama, fill = type))
ggplot(data = plot2data)+
geom_col(aes(x = Poverty, y = vote_obama))
ggplot(data = plot2data)+
geom_col(aes(x = as.character(Poverty), y = vote_obama))
ggplot(data = plot2data)+
geom_point(aes(x = Poverty, y = vote_obama))
ggplot(data = plot2data)+
geom_point(aes(x = Poverty, y = vote_obama))+
labs(title = "Poverty vs. Obama's vote in percent")
ggplot(data = plot2data)+
geom_point(aes(x = Poverty, y = vote_obama, color = State))+
labs(title = "Poverty vs. Obama's vote in percent")
##plot1
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "Obama's Margin in States", fill = "Margin(%)") +
geom_text(aes(x = long, y = lat, label = WinStatus), size = 4)+
theme_void()
##plot1
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "Obama's Margin in States", fill = "Margin(%)") +
geom_text(aes(x = long, y = lat, label = State), size = 4)+
theme_void()
##plot1
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "Obama's Margin in States", fill = "Margin(%)") +
theme_void()
##plot1
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "Obama's Margin in States", fill = "Margin(%)") +
theme_void()
>
unique(election_data$Region)
election_data_train %>% group_by(Region) %>% summarize(mean(Obama/TotalVote))
a<-election_data_train %>% group_by(Region) %>% summarize(mean(Obama/TotalVote))
ggplot(data = a)
a<-election_data_train %>% group_by(Region) %>% summarize(Obama% = mean(Obama/TotalVote))
a<-election_data_train %>% group_by(Region) %>% summarize(ObamaVotes = mean(Obama/TotalVote))
ggplot(data = a)+
geom_col(aes(x = Region, y = ObamaVotes))
ggplot(data = a)+
geom_col(aes(x = Region, y = ObamaVotes))
a<-election_data_train %>% group_by(Region) %>% summarize(ObamaVotes = mean(Obama/TotalVote), Poverty = mean(Poverty))
ggplot(data = a)+
geom_col(aes(x = Region, y = Poverty))
ggplot(data = a)+
geom_col(aes(x = Region, y = ObamaVotes))
ggplot(data = a)+
geom_col(aes(x = Region, y = Poverty))
ggplot(data = a)+
geom_col(aes(x = Region, y = ObamaVotes))+
geom_col(aes(x = Region, y = Poverty))
a<-election_data_train %>% group_by(Region) %>% summarize(ObamaVotes = mean(Obama/TotalVote), Poverty = mean(Poverty))%>%
pivot_longer(-c(1,2), names_to = "type", values_to = "Percent" )
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent))
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, group = type))
a
a<-election_data_train %>% group_by(Region) %>% summarize(ObamaVotes = mean(Obama/TotalVote), Poverty = mean(Poverty))%>%
pivot_longer(-c(1), names_to = "type", values_to = "Percent" )
a
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, group = type))
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, group = type), position = position_dodge(width = 0.8))
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))+
geom_text(aes(x = Region, y = Percent, labels = Percent))
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))+
geom_text(aes(x = Region, y = Percent, label = Percent))
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))+
geom_text(aes(x = Region, y = Percent, label = round(Percent)))
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))+
geom_text(aes(x = Region, y = Percent, label = round(Percent,2)))
a<-election_data_train %>% group_by(Region) %>% summarize(ObamaVotes = mean(Obama/TotalVote)*100, Poverty = mean(Poverty))%>%
pivot_longer(-c(1), names_to = "type", values_to = "Percent" )
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))+
geom_text(aes(x = Region, y = Percent, label = round(Percent,2)))
##plot2
a<-election_data_train %>% group_by(Region) %>% summarize(ObamaVotes = mean(Obama/TotalVote)*100, PovertyRate = mean(Poverty))%>%
pivot_longer(-c(1), names_to = "type", values_to = "Percent" )
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))+
geom_text(aes(x = Region, y = Percent, label = round(Percent,2)))+
labs(title = "Votes for Obama (%) vs Poverty Rate (%)")
state_abbr_mapping <- data.frame(
State = tolower(c("Alabama", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")),
Abbreviation = c("AL", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
)
View(state_abbr_mapping)
####
### Question 4. Second part
####
#### Model with 1771 controls to measure the impact of 1% larger Hispanic demographic
y <- election_data_train$Obama_margin_percent
x <- model.matrix( Obama_margin_percent ~ .-Hispanic-Obama_wins-Obama_margin-FIPS-ElectionDate-TotalVote-Clinton-Obama, data = election_data_train )
d <- election_data_train$Hispanic
print(x,y,d)
CausalLinear(y,d,x)
d
mean(d)
y
####
### Question 4. Second part
####
#### Model with 1771 controls to measure the impact of 1% larger Hispanic demographic
y <- election_data_train$Obama_margin_percent
x <- model.matrix( Obama_margin_percent ~ .-Hispanic-Obama_wins-Obama_margin-FIPS-ElectionDate-TotalVote-Clinton-Obama, data = election_data_train )
d <- election_data_train$Hispanic
summary(glm(y~d+x))
summary(glm(y~d+x)) %>% View()
a <- summary(glm(y~d+x))
a$coefficients
a$coefficients %>% View()
length(election_data_train)
View(election_data_train)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(tidyselect)
library(ROCR)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
###START###
#####SPLITTING######hello
set.seed(123456)
trainIndex <- createDataPartition(loan$Default, p = 0.70, list = FALSE)
library(caret)
library(glmnet)
library(randomForest)
library(dplyr)
library(tidyverse)
library(cluster)
#Factor conversion
election_data$County <- as.factor(election_data$County)
election_data$State <- as.factor(election_data$State)
election_data$FIPS <- as.factor(election_data$FIPS)
election_data$Region <- as.factor(election_data$Region)
election_data <- read.csv("./Case3/ElectionDataAlone.csv")
#Factor conversion
election_data$County <- as.factor(election_data$County)
election_data$State <- as.factor(election_data$State)
election_data$FIPS <- as.factor(election_data$FIPS)
election_data$Region <- as.factor(election_data$Region)
election_data$ElectionType <- as.factor(election_data$ElectionType)
#Add margins
election_data_train$Obama_margin <- election_data_train$Obama - election_data_train$Clinton
election_data_train$Obama_margin_percent <- 100*election_data_train$Obama_margin/election_data_train$TotalVote
election_data_train$Obama_wins <- ifelse(election_data_train$Obama_margin >0, 1,0)
names(election_data_train)
election_data <- read.csv("./Case3/ElectionDataAlone.csv")
impute_data <- function(vec, mn) {
ifelse(is.na(vec), mn, vec)
}
data_mean <- sapply(election_data[,10:41],mean, na.rm=TRUE)
(data_mean)
for(i in 10:41) {
election_data[,i]<-impute_data(election_data[,i],data_mean[i-9])
}
summary(election_data)
election_data$ElectionDate <- as.Date(election_data$ElectionDate, format="%m/%d/%Y")
election_data_train <- election_data[election_data$ElectionDate < as.Date("2/19/2008", format="%m/%d/%Y"), ]
election_data_test <- election_data[election_data$ElectionDate >= as.Date("2/19/2008", format="%m/%d/%Y"), ]
#Factor conversion
election_data$County <- as.factor(election_data$County)
election_data$State <- as.factor(election_data$State)
election_data$FIPS <- as.factor(election_data$FIPS)
election_data$Region <- as.factor(election_data$Region)
election_data$ElectionType <- as.factor(election_data$ElectionType)
#Add margins
election_data_train$Obama_margin <- election_data_train$Obama - election_data_train$Clinton
election_data_train$Obama_margin_percent <- 100*election_data_train$Obama_margin/election_data_train$TotalVote
election_data_train$Obama_wins <- ifelse(election_data_train$Obama_margin >0, 1,0)
#Split the original file
election_data$ElectionDate <- as.Date(election_data$ElectionDate, format="%m/%d/%Y")
##plot1
us_map <- map_data("state")
state_abbr_mapping <- data.frame(
State = tolower(c("Alabama", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")),
Abbreviation = c("AL", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
)
us_map$State <- state_abbr_mapping$Abbreviation[match(us_map$region, state_abbr_mapping$State)]
state_map <- merge(us_map, election_data_train, by.x = "State", by.y = "State", all.x = TRUE)
ggplot(state_map)+
geom_map(aes(fill = Obama_margin_percent, x =  long, y = lat, map_id = region), map = us_map, colour="white", size = 0.5)+
labs(title = "Obama's Margin in States", fill = "Margin(%)") +
theme_void()
##plot2
a<-election_data_train %>% group_by(Region) %>% summarize(ObamaVotes = mean(Obama/TotalVote)*100, PovertyRate = mean(Poverty))%>%
pivot_longer(-c(1), names_to = "type", values_to = "Percent" )
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))+
geom_text(aes(x = Region, y = Percent, label = round(Percent,2)))+
labs(title = "Votes for Obama (%) vs Poverty Rate (%)")
###Question 2###
#Split the training data for OOS
set.seed(123456)
#Split the training data for OOS
set.seed(123456)
train_indices <- sample(1:nrow(election_data_train), 0.8 * nrow(election_data_train))
train_data_OOS <- election_data_train[train_indices, ]
test_data_OOS <- election_data_train[-train_indices, ]
#Column deletion
test_data <- subset(test_data, select = -c(County, State, Region, FIPS))
train_data <- subset(test_data, select = -c(County, State, Region, FIPS))
election_data_test <- subset(election_data_test, select = -c(County, State, Region, FIPS))
#Column deletion
data_drop <- c(County, State, Region, FIPS)
test_data <- subset(test_data, select = -data_drop)
test_data_OOS <- election_data_train[-train_indices, ]
test_data <- subset(test_data_OOS, select = -data_drop)
#Column deletion
data_drop <- c("County", "State", "Region", "FIPS")
test_data <- subset(test_data_OOS, select = -data_drop)
train_data <- subset(test_data, select = -c(County, State, Region, FIPS))
train_data <- subset(test_data_OOS, select = -c(County, State, Region, FIPS))
#Column deletion
data_drop <- c(County, State, Region, FIPS)
#Column deletion
test_data <- subset(test_data_OOS, select = -c(County, State, Region, FIPS))
train_data <- subset(test_data, select = -c(County, State, Region, FIPS))
train_data <- subset(test_data_OOS, select = -c(County, State, Region, FIPS))
election_data_test <- subset(election_data_test, select = -c(County, State, Region, FIPS))
election_data_test <- subset(election_data_test, select = -c(County, State, Region, FIPS))
View(election_data_test)
#Total vote count
a <- model.matrix(TotalVote ~ . - 1, train_data)
b <- train_data$TotalVote
lasso <- glmnet(a, b, alpha=1)
cv.lasso <- cv.glmnet(a, b, alpha=1)
best_lambda <- cv.lasso$lambda.min
coef(lasso, s=best_lambda)
prediction_lasso <- predict(lasso, newx=a, s=best_lambda)
plot(lasso)
plot(cv.lasso)
plot(lasso)
plot(cv.lasso)
# Extract the coefficients from the Lasso model at the optimal lambda
lasso_coefficients <- coef(lasso, s = best_lambda)
# Filter out the variables with non-zero coefficients
selected_vars <- lasso_coefficients[lasso_coefficients[,1] != 0, , drop = FALSE]
# Print the names of the selected variables
print(rownames(selected_vars))
#Obama
c <- model.matrix(Obama ~ . - 1, train_data)
d <- train_data$Obama
lassoO <- glmnet(c, d, alpha=1)
cv.lassoO <- cv.glmnet(c, d, alpha=1)
best_lambdaO <- cv.lasso$lambda.min
coef(lasso, s=best_lambda)
prediction_lassoO <- predict(lasso, newx=c, s=best_lambda)
plot(lassoO)
plot(cv.lassoO)
# Extract the coefficients from the Lasso model at the optimal lambda
lasso_coefficientsO <- coef(lassoO, s = best_lambdaO)
# Filter out the variables with non-zero coefficients
selected_varsO <- lasso_coefficientsO[lasso_coefficientsO[,1] != 0, , drop = FALSE]
# Print the names of the selected variables
print(rownames(selected_varsO))
#Random forest TotalVote on OOS
random_total <- randomForest(TotalVote ~ ., data = train_data, ntree = 100, mtry = 8, importance = TRUE)
print(random_total)
predictions_total <- predict(random_total, newdata=test_data)
MAE_T <- mean(abs(predictions_total - test_data$TotalVote))
MAE_T
plot(random_total)
varImpPlot(random_total)
#Random forest Obama on OOS
random_obama <- randomForest(Obama ~ ., data = train_data, ntree = 100, mtry = 8, importance = TRUE)
print(random_obama)
predictions_obama <- predict(random_obama, newdata=test_data)
MAE_O <- mean(abs(predictions_obama - test_data$Obama))
MAE_O
plot(random_obama)
varImpPlot(random_obama)
#Random forest Clinton on OOS
random_clinton <- randomForest(Clinton ~ ., data = train_data, ntree = 100, mtry = 8, importance = TRUE)
print(random_clinton)
predictions_clinton <- predict(random_clinton, newdata=test_data)
MAE_C <- mean(abs(predictions_clinton - test_data$Clinton))
MAE_C
plot(random_clinton)
varImpPlot(random_clinton)
#Random forest TotalVote on TEST
total_test <- randomForest(TotalVote ~ ., data = train_data, ntree = 100, mtry = 8, importance = TRUE)
print(total_test)
predictions_total_test <- predict(total_test, newdata=election_data_test)
MAE_TT <- mean(abs(predictions_total_test - election_data_test$TotalVote))
MAE_TT
plot(total_test)
varImpPlot(total_test)
#Random forest Obama on TEST
random_obama <- randomForest(Obama ~ ., data = train_data, ntree = 100, mtry = 8, importance = TRUE)
print(random_obama)
predictions_obama <- predict(random_obama, newdata=test_data)
MAE_O <- mean(abs(predictions_obama - test_data$Obama))
MAE_O
plot(random_obama)
varImpPlot(random_obama)
#Random forest Clinton on TEST
random_clinton <- randomForest(Clinton ~ ., data = train_data, ntree = 100, mtry = 8, importance = TRUE)
print(random_clinton)
predictions_clinton <- predict(random_clinton, newdata=test_data)
MAE_C <- mean(abs(predictions_clinton - test_data$Clinton))
MAE_C
plot(random_clinton)
varImpPlot(random_clinton)
subset3 <- select(election_data, -County, -State, - Region, -FIPS, -ElectionDate, -ElectionType, -TotalVote, -Obama, -Clinton)
df3 <- scale(subset3)
# Number of clusters to consider
max_k <- 15
wss <- numeric(max_k)
for (k in 1:max_k) {
kmeans_result <- kmeans(df3, centers = k, nstart = 25)
wss[k] <- kmeans_result$tot.withinss
}
# Plot the total within sum of squares vs. number of clusters
tibble(k = 1:max_k, wss = wss) %>%
ggplot(aes(x = k, y = wss)) +
geom_line() +
geom_point() +
ggtitle("Elbow Method for Optimal k") +
xlab("Number of clusters (k)") +
ylab("Total Within Sum of Squares")
##plot2
a<-election_data_train %>% group_by(Region) %>% summarize(ObamaVotes = mean(Obama/TotalVote)*100, PovertyRate = mean(Poverty))%>%
pivot_longer(-c(1), names_to = "type", values_to = "Percent" )
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge(width = 0.8))+
geom_text(aes(x = Region, y = Percent, label = round(Percent,2)))+
labs(title = "Votes for Obama (%) vs Poverty Rate (%)")
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge+
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge)+
geom_text(aes(x = Region, y = Percent, label = round(Percent,2)))+
labs(title = "Votes for Obama (%) vs Poverty Rate (%)")
>
>
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge)+
geom_text(aes(x = Region, y = Percent, label = round(Percent,2)))+
labs(title = "Votes for Obama (%) vs Poverty Rate (%)")
ggplot(data = a)+
geom_col(aes(x = Region, y = Percent, fill = type), position = position_dodge())+
geom_text(aes(x = Region, y = Percent, label = round(Percent,2)))+
labs(title = "Votes for Obama (%) vs Poverty Rate (%)")
