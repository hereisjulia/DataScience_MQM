geom_point(aes(x = mom.age, y = n), position = position_stack(reverse = TRUE))+
labs(title = "Pregnancy Women Smoke over Ages", x = "Mom's age", y = "Population")
plot2 <- DATA %>% select(mom.age, smoke) %>% group_by(mom.age) %>% count(smoke)
plot2$smoke <- as.integer(plot1$smoke)
plot2$smoke <- plot2$smoke %>% factor(c(1,0))
ggplot(data = plot2)+
geom_col(aes(x = mom.age, y = n, fill = smoke), position = position_stack(reverse = TRUE))+
scale_fill_manual(values = c("1" = "blue", "0" = "black"),
labels = c("1" = "yes", "0" = "no")) +
labs(title = "Pregnancy Women Smoke over Ages", x = "Mom's age", y = "Population")
#####################################
#2
pvals
alpha <- pvals < 0.05
alpha
ListLabels[alpha]
#Bonferroni correction
new_alpha <- 0.05/45
alpha2 <- pvals < new_alpha
alpha2
ListLabels[alpha2]
####################################
#3
#Mother's weight and average weight
DATA_PIVOT <- DATA %>%
group_by(mom.age) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
qplot(DATA_PIVOT$mom.age, DATA_PIVOT$average_weight)
#Smoker vs. non-smoker and average weight
DATA_PIVOT2 <- DATA %>%
group_by(smoke) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
barplot(DATA_PIVOT2$average_weight, names.arg=DATA_PIVOT2$smoke, xlab = "Smoker", ylab = "Average Weight")
#Cigarettes per day and average weight
DATA_PIVOT3 <- DATA %>%
group_by(cigsper) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
qplot(DATA_PIVOT3$cigsper, DATA_PIVOT3$average_weight)
######################################
#4
model1 <- lm(weight ~ black + married + boy + tri1 + tri2 + tri3 + ed.hs + ed.smcol + ed.col + mom.age + smoke + cigsper + m.wtgain + mom.age2, data = DATA)
summary(model1)
library(ggplot2)
library(readr)
library(tidyverse)
read_csv(./ClassMaterials/customerchurn.csv)
customerChurn <- read_csv("./ClassMaterials/customerchurn.csv")
summary(customerChurn)
lendth(customerChurn)
lenth(customerChurn)
length(customerChurn)
View(customerChurn)
summary(customerChurn)
churned <- customerChurn %>% filter(Churn == "Yes")
customerChurn <- read_csv("./ClassMaterials/customerchurn.csv")
summary(customerChurn)
ggplot(data = customerChurn)+
geom_point(aes(x = MonthlyCharges, y= TotalCharges, color= Churn))
pivot_longer(customerChurn,
cols = c(3:20),
names_to = "Type",
values_to = "Values")
pivot_longer(customerChurn,
cols = 3:20,
names_to = "Type",
values_to = "Values")
?pivot_longer
pivot_longer(customerChurn,
cols = range(3,20),
names_to = "Type",
values_to = "Values")
glm(Churn ~ ., data = customerChurn)
plot(factor(Churn) ~ factor(InternService), data = customerChurn)
plot(factor(Churn) ~ factor(InternetService), data = customerChurn)
plot(factor(Churn) ~ gender, data = customerChurn)
plot(factor(Churn) ~ factor(gender), data = customerChurn)
plot(factor(Churn) ~ factor(tenure), data = customerChurn)
?plot
?plot(x ~ y)
glm(Churn ~ tenure + MonthlyCharges, data = customerChurn, family = "Binary")
glm(Churn ~ tenure + MonthlyCharges, data = customerChurn, family = "Binarial")
?glm
glm(Churn ~ tenure + MonthlyCharges, data = customerChurn, family = "binomial")
library(stringr)
customerChurn$Churn %>% str_replace_all("Yes", 1)
customerChurn$Churn %>% str_replace_all("Yes", "1")
customerChurn$Churn %>% str_replace_all("Yes", "1") %>% str_replace_all("No", "0") %>% as.numeric()
customerChurn$Churn <- customerChurn$Churn %>% str_replace_all("Yes", "1") %>% str_replace_all("No", "0") %>% as.numeric()
glm(Churn ~ tenure + MonthlyCharges, data = customerChurn, family = "binomial")
tree(Churn ~ tenure + MonthlyCharges , data = customerChurn)
?tree()
library(cli)
tree(Churn ~ tenure + MonthlyCharges , data = customerChurn)
randomForest(Churn ~ .-customerID, data = customerChurn,
nodesize = 5, ntree = 500, mtry = 4)
?randomForest
library(randomForest)
library(randomForest)
randomForest(Churn ~ .-customerID, data = customerChurn,
nodesize = 5, ntree = 500, mtry = 4)
library(tidyverse)
library(ggplot2)
library(readxl)
read_excel("C:/Users/Ya Chiao Tsai/OneDrive/桌面/Data.xlsx")
data <- read_excel("C:/Users/Ya Chiao Tsai/OneDrive/桌面/Data.xlsx")
View(data)
data %>% pivot_longer(names_to = Company, values_to = )
data %>% pivot_longer(names_to = "Company", values_to = c("Avg. Return","SD
"))
data %>% pivot_longer(names_to = "Company", values_to = c("Avg. Return","SD"))
data[-1,]
data[,-1]
data <- data[,-1]
data
data
pivot_longer(data, names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = 1:30, names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = c(1:30), names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = :, names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = range(1:30), names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = 1:30, names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = 1:30, names_to = "Company", values_to = c("a"))
data <- read_excel("C:/Users/Ya Chiao Tsai/OneDrive/桌面/Data.xlsx")
data
pivot_longer(data, cols = 1:30, names_to = "Company", values_to = c("a"))
pivot_longer(data, cols = 1:31, names_to = "Company", values_to = c("a"))
pivot_longer(data, cols = 2:31, names_to = "Company", values_to = c("a"))
data <- pivot_longer(data, cols = 2:31, names_to = "Company", values_to = c("a"))
data <- read_excel("C:/Users/Ya Chiao Tsai/OneDrive/桌面/Data.xlsx")
data
long_data <- pivot_longer(data, cols = 2:31, names_to = "Company", values_to = c("a"))
ggplot(data = long_data)+
geom_point(aes(x = filter(long_data, 3 = "Avg. Return")))
AvgData <- long_data %>% filter("3" = "Avg. Return")
names(long_data)[1] <- "type"
AvgData <- long_data %>% filter(type = "Avg. Return")
AvgData <- long_data %>% filter(type == "Avg. Return")
long_data
ggplot()+
geom_point(data = AvgData, aes(x = filter(long_data, "3" = "Avg. Return"), y = a))
SDdata <- long_data %>% filter(type == "SD")
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a, color = Company))
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a, color = "Company"))
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))
lm(AvgData$a ~ SDdata$a)
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))+
geom_abline(intercept = 2.1778, slope = -0.1055)
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))+
geom_abline(intercept = 2.1778, slope = -0.1055)
lm(SDdata$a ~ AvgData$a)
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))+
geom_abline(intercept = 8.3501, slope = -0.8768)
ggplot()+
geom_point(aes(x = SDdata$a, y = AvgData$a))+
geom_abline(intercept = 2.1778, slope = -0.1055)
install.packages("glmnet")
install.packages("glmnet")
library(glmnet)
library(readxl)
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(readr)
data <- read_csv("./Case2/ALLSTATEcost.csv")
View(data)
summary(data)
data <- read_csv("./Case2/ALLSTATEcost.csv")
summary(data)
data[,1]
data[,c(2,3,4,5,6,7)]
timeLocation <- data[,c(2,3,4,5,6,7)]
data[, 8:15]
customerGroup <- data[, 8:15]
timeLocation <- data[,c(2,3,4,5,6,7,"cost")]
timeLocation <- data[,c(2,3,4,5,6,7, 25)]
customerGroup <- data[, c(8:15, 25)]
View(customerGroup)
coverage <- data[, 16:25]
coverage <- data[, c(25,16:24)]
timeLocation <- data[,c(25,2,3,4,5,6,7)]
customerGroup <- data[, c(25, 8:15)]
coverage <- data[, c(25,16:24)]
View(coverage)
coverage %>% pivot_longer( -1:3, names_to = option, values_to = level)
coverage %>% pivot_longer( -1:3, names_to = "option", values_to = "level")
View(coverage)
coverage %>% pivot_longer( 4:10, names_to = "option", values_to = "level")
coverage_long <- coverage %>% pivot_longer( 4:10, names_to = "option", values_to = "level")
View(coverage_long)
ggplot(data = coverage_long)+
geom_point(aes(x = level, y = cost, color = option))
ggplot(data = coverage_long)+
geom_point(aes(x = level, y = cost, color = option))+
facet_wrap(option)
ggplot(data = coverage_long)+
geom_point(aes(x = level, y = cost, color = option))+
facet_wrap(~option)
ggplot(data = coverage_long)+
geom_point(aes(x = level, y = cost, color = option, xlim = max(level)))+
facet_wrap(~option)
ggplot(data = coverage_long)+
geom_point(aes(x = level, y = cost, color = option))+
facet_wrap(~option)
ggplot(data = coverage_long)+
geom_boxplot(aes(x = level, y = cost, color = option))+
facet_wrap(~option)
ggplot(data = coverage_long)+
geom_line(aes(x = level, y = cost, color = option))+
facet_wrap(~option)
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = cost, color = option))+
facet_wrap(~option)
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = cost, color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(values = c("Collision", "Towing", "Bodily Injury", "Property Damage", "Rental Reimbursement", "Comprehensive", "Med/PIP"))
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = cost, color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(values = c("A" = "Collision",
"B" = "Towing",
"C" = "Bodily Injury",
"D" = "Property Damage",
"E" = "Rental Reimbursement",
"F" = "Comprehensive",
"G" = "Med/PIP"))
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = cost, color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(labels = c("Collision", "Towing", "Bodily Injury", "Property Damage", "Rental Reimbursement", "Comprehensive", "Med/PIP"))
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = cost, color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(labels = c("Collision", "Towing", "Bodily Injury", "Property Damage", "Rental Reimbursement", "Comprehensive", "Med/PIP"))
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = cost, color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(
labels = c("Collision", "Towing", "Bodily Injury", "Property Damage", "Rental Reimbursement", "Comprehensive", "Med/PIP"))
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = cost, color = option))+
facet_wrap(~option)+
scale_color_manual(
labels = c("Collision", "Towing", "Bodily Injury", "Property Damage", "Rental Reimbursement", "Comprehensive", "Med/PIP"))+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = cost, color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = average(cost), color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = avg(cost), color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = mean(cost), color = option))+
facet_wrap(~option)+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = coverage_long)+
geom_jitter(aes(x = level, y = mean(cost), color = option))+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = coverage_long)+
geom_point(aes(x = level, y = mean(cost), color = option))+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
coverage_long %>% group_by(option) %>% summarize(mean(cost))
coverage_long %>% group_by(option, levle) %>% summarize(mean(cost))
coverage_long %>% group_by(option, level) %>% summarize(mean(cost))
plot1 <- coverage_long %>% group_by(option, level) %>% summarize(mean(cost))
View(plot1)
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean(cost)`, color = option))+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
plot1 <- coverage_long %>% group_by(option, level) %>% summarize(mean(cost), count(option))
plot1 <- coverage_long %>% group_by(option, level) %>% summarize(mean(cost), length(option))
View(plot1)
length(data$customer_ID)
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean(cost)`, size = length(option), color = option))+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
scale_color_brewer(palette = "Set1")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
scale_color_brewer(palette = "Set1")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
scale_color_brewer(palette = "viridis")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
scale_color_brewer(palette = "plasma")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
scale_color_brewer(palette = "inferno")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
scale_color_brewer(palette = "rainbow")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
scale_color_brewer(palette = "set2")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean(cost)`, size = `length(option)`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
plot1 <- coverage_long %>% group_by(option, level) %>% summarize(mean = mean(cost), number_of_deal = length(option))
View(plot1)
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option)
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "coverage options vs. cost", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option)+
theme_classic()
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option)+
theme_classic()
ggplot(data = plot1)+
geom_jitter(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(labels = c("a","b","c","d", "e", "f", "g"))+
facet_wrap(~option)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(values = option,
labels = c("a","b","c","d", "e", "f", "g"))+
facet_wrap(~option)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(values = "Set2",
labels = c("a","b","c","d", "e", "f", "g"))+
facet_wrap(~option)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(values = plot1$option,
labels = c("a","b","c","d", "e", "f", "g"))+
facet_wrap(~option)+
theme_bw()
names(coverage)
length(coverage)
names(coverage)[4:10]
names(coverage)[4:10] <- c("Collision", "Towing", "BI", "PD", "RR", "Comp", "Med/PIP")
coverage <- data[, c(25,16:24)]
names(coverage)[4:10] <- c("Collision", "Towing", "BI", "PD", "RR", "Comp", "Med/PIP")
coverage_long <- coverage %>% pivot_longer( 4:10, names_to = "option", values_to = "level")
plot1 <- coverage_long %>% group_by(option, level) %>% summarize(mean = mean(cost), number_of_deal = length(option))
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
scale_color_manual(values = plot1$option,
labels = c("a","b","c","d", "e", "f", "g"))+
facet_wrap(~option)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option, nrow = 4)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option, ncol = 4)+
theme_bw()
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option, ncol = 3)+
theme_bw()
plot(cost ~ homeowner, data = customerGroup)
View(customerGroup)
plot(factor(homeowner) ~ cost, data = customerGroup)
plot(factor(homeowner) ~ cost, col = "Pastel1", data = customerGroup)
plot2Color <- brewer.pal(n = 2, name = "Pastel1")
library(RColorBrewer)
plot2Color <- brewer.pal(n = 2, name = "Pastel1")
plot2Color <- brewer.pal(n = 3, name = "Pastel1")
plot(factor(homeowner) ~ cost, col = plot2Color, data = customerGroup)
plot(factor(homeowner) ~ cost, col = plot2Color, xlab = "Quote for customer", ylab = "Homeowner", data = customerGroup)
legend("right", legend = c("Yes","No"), fill = plot2Color)
plot(factor(homeowner) ~ cost, col = plot2Color, xlab = "Quote for customer", ylab = "Homeowner", data = customerGroup)
legend("right", legend = c("Yes","No"), fill = plot2Color)
plot(factor(homeowner) ~ cost, col = plot2Color, xlab = "Quote for customer", ylab = "Homeowner", title = "HHomeowner's Quotes", data = customerGroup)
plot(factor(homeowner) ~ cost, col = plot2Color, xlab = "Quote for customer", ylab = "Homeowner", data = customerGroup)
library(stringr)
customerGroup$homeowner %>% str_replace_all(1, "Yes")
customerGroup$homeowner %>% str_replace_all(., 1, "Yes")
class(data$homeowner)
customerGroup$homeowner %>% str_replace_all(c(1,0), c("Yes","No)")
customerGroup$homeowner %>% str_replace_all(c(1,0), c("Yes","No"))
customerGroup$homeowner %>% as.character() %>% str_replace_all(c("1","0"), c("Yes","No"))
customerGroup$homeowner %>% as.character() %>% str_replace_all("1"), "Yes")
customerGroup$homeowner %>% as.character() %>% str_replace_all("1", "Yes")
customerGroup$homeowner %>% as.character() %>% str_replace_all("1", "Yes") %>% str_replace_all("0", "No")
customerGroup$homeowner <- customerGroup$homeowner %>% as.character() %>% str_replace_all("1", "Yes") %>% str_replace_all("0", "No")
plot2Color <- brewer.pal(n = 3, name = "Pastel1")
plot(factor(homeowner) ~ cost, col = plot2Color, xlab = "Quote for customer", ylab = "Homeowner", data = customerGroup)
plot(cost ~ factor(homeowner), col = plot2Color, xlab = "Quote for customer", ylab = "Homeowner", data = customerGroup)
plot(factor(homeowner) ~ cost, col = plot2Color, xlab = "Quote for customer", ylab = "Homeowner", data = customerGroup)
ggplot(data = plot1)+
geom_point(aes(x = level, y = `mean`, size = `number_of_deal`, color = option))+
scale_color_brewer(palette = "Set2")+
labs(title = "Coverage Options & Amount vs. Quotes", x = "Quote for customers", y = "Level of Coverage")+
facet_wrap(~option, ncol = 3)+
theme_bw()
lm(cost ~ ., data = data)
lm(cost ~ ., data = data) %>% summary()
lm(cost ~ ., data = data) %>% summary() %>% .$Coefficients
lm(cost ~ ., data = data) %>% summary()
lm(cost ~ day+state+homeowner+car_age +car_value + risk_factor + age_oldest + age_youngest + married_couple + C_previous + duration_previous + A +B+C+D+E+F+G
, data = data) %>% summary()
Glm(cost ~ day+state+homeowner+car_age +car_value + risk_factor + age_oldest + age_youngest + married_couple + C_previous + duration_previous + A +B+C+D+E+F+G
, data = data) %>% summary()
glm(cost ~ day+state+homeowner+car_age +car_value + risk_factor + age_oldest + age_youngest + married_couple + C_previous + duration_previous + A +B+C+D+E+F+G
, data = data) %>% summary()
load("./Case2/NewCustomers.Rda")
source("DataAnalyticsFunctions.R")
load("./Case2/NewCustomers.Rda")
load("./Case2/NewCustomers.Rda")
load("E:/MQM_Courses/Term2/Data_Science/DataScienceMQM/Case2/NewCustomers.Rda")
summary(DATA)
load("E:/MQM_Courses/Term2/Data_Science/DataScienceMQM/Case2/NewCustomers.Rda")
ls()
summary(R2)
ls()
#  "deviance"       "devianceQR"    "FPR_TPR"        "installpkg"     "kIC"            "lambda.BC"         "R2"            "support"
R2
#  "deviance"       "devianceQR"    "FPR_TPR"        "installpkg"     "kIC"            "lambda.BC"         "R2"            "support"
Revenue2 <- R2
Revenue2()
Revenue2
#  "deviance"       "devianceQR"    "FPR_TPR"        "installpkg"     "kIC"            "lambda.BC"         "R2"            "support"
Revenue2()
load("E:/MQM_Courses/Term2/Data_Science/DataScienceMQM/Case2/NewCustomers.Rda")
View(timeLocation)
View(timeLocation)
data <- read_csv("./Case2/ALLSTATEcost.csv")
library(readxl)
library(readr)
library(tidyverse)
library(ggplot2)
library(stringr)
data <- read_csv("./Case2/ALLSTATEcost.csv")
data <- read_csv("./Case2/ALLSTATEcost.csv")
data <- read_csv("./Case2/ALLSTATEcost.csv")
