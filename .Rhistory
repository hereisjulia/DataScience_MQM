### Initialization with Cleaning up of Data ####
###
### Load auxiliary R file
source("DataAnalyticsFunctions.R")
######################################################
### Load infant weight data
load("natalityNew.Rda")
### This creates a data frame called "d"
### This data set has 198377 observations
### 19 variables but we need to clean up a little
### Lets see a summary of the data
summary(d)
######################################################
### The following code will clean up the data for you
###
###
### tri.none is all zeros so we will remove it.
### birmon is all 6 so we will remove it.
### Also, there are redundancies (and identifier number).
### We will remove the following varaibles: "id","birmon","tri.none","novisit"
### to do that lets create a vector with those names
drops <- c("id","birmon","tri.none","novisit")
### names(d) has all the column names. We want to REMOVE the names in drops
### names(d) %in% drops tells you which entry of names(d) is in drops
names(d) %in% drops
### this is a value of true/false for each column
### since we want "not in" we reverse that with the command "!"
!( names(d) %in% drops )
### we can use the logical vector above to select the columns
### the following command creates a dataframe (called DATA)
### which has all the columns from d not in drops
DATA <- d[,!(names(d) %in% drops)]
summary(DATA)
######################################################
###
### You can start with Questions 1, 3, 4
### (recall that 5 and 6 do note need additional analysis)
###
######################################################
###
### Organizational help for Question 2
###
### This creates a matrix with only the 10 binary variables
MatrixComp <- as.matrix( cbind( DATA$boy, DATA$tri1, DATA$tri2, DATA$tri3, DATA$black, DATA$married, DATA$ed.hs, DATA$ed.smcol, DATA$ed.col, DATA$smoke ))
### Here is the associated LAbels (for convenience)
LabelsTmp <- c( "boy", "tri1", "tri2", "tri3", "black", "married", "ed.hs", "ed.smcol", "ed.col","smoke")
### Number of columns (should be 10)
NumCol <- ncol(MatrixComp)
### Next we compute the p-values for each pair
pvals <- rep(0, NumCol*(NumCol-1)/2)
### Also will collect the pair label
ListLabels <- rep("", NumCol*(NumCol-1)/2)
k <- 0
for (i in 1:(NumCol-1) ){
for ( j in (i+1):NumCol ){
k <- k+1
### Creates the entries of the contingency table
m00 <- sum( (MatrixComp[,i] == 0) & (MatrixComp[,j] == 0) )
m01 <- sum( (MatrixComp[,i] == 0) & (MatrixComp[,j] == 1) )
m10 <- sum( (MatrixComp[,i] == 1) & (MatrixComp[,j] == 0) )
m11 <- sum( (MatrixComp[,i] == 1) & (MatrixComp[,j] == 1) )
### Construct the contingency table
ContingencyMatrix <- as.table(rbind(c(m00, m01), c(m10, m11)))
### Perform the Pearson chi squares test for independent of factors
# store the p-value of the test
pvals[k] <- chisq.test(ContingencyMatrix)$p.value
# create the Label
ListLabels[k] <- paste(LabelsTmp[i],LabelsTmp[j], sep=" and ")
}
}
###############################################################
### Now you have:
### a list of p-values; and
### a list of labels to help you identify which are the variables
###
### pvals: is a vector with 45 p-values each associated with an independency test
### ListLabels: is a vector with the labels of the 2 variables used on each the independence test
###
### for example
### the third test pertains to the pair
ListLabels[3]
### which p-value is
pvals[3]
################################################################
################################################################
### You can proceed to Question 2
#1
library(tidyverse)
library(ggplot2)
plot1 <- DATA %>% select(mom.age, smoke) %>% filter(smoke == 1) %>% group_by(mom.age) %>% count(smoke)
ggplot(data = plot1)+
geom_point(aes(x = mom.age, y = n), position = position_stack(reverse = TRUE))+
labs(title = "Pregnancy Women Smoke over Ages", x = "Mom's age", y = "Population")
plot2 <- DATA %>% select(mom.age, smoke) %>% group_by(mom.age) %>% count(smoke)
plot2$smoke <- as.integer(plot1$smoke)
plot2$smoke <- plot2$smoke %>% factor(c(1,0))
ggplot(data = plot2)+
geom_col(aes(x = mom.age, y = n, fill = smoke), position = position_stack(reverse = TRUE))+
scale_fill_manual(values = c("1" = "blue", "0" = "black"),
labels = c("1" = "yes", "0" = "no")) +
labs(title = "Pregnancy Women Smoke over Ages", x = "Mom's age", y = "Population")
#####################################
#2
pvals
alpha <- pvals < 0.05
alpha
#Bonferroni correction
new_alpha <- 0.05/45
alpha2 <- pvals < new_alpha
alpha2
ListLabels[alpha]
ListLabels[alpha2]
####################################
#3
#Mother's weight and average weight
DATA_PIVOT <- DATA %>%
group_by(mom.age) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
qplot(DATA_PIVOT$mom.age, DATA_PIVOT$average_weight)
#Smoker vs. non-smoker and average weight
DATA_PIVOT2 <- DATA %>%
group_by(smoke) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
barplot(DATA_PIVOT2$average_weight, names.arg=DATA_PIVOT2$smoke, xlab = "Smoker", ylab = "Average Weight")
#Cigarettes per day and average weight
DATA_PIVOT3 <- DATA %>%
group_by(cigsper) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
qplot(DATA_PIVOT3$cigsper, DATA_PIVOT3$average_weight)
######################################
#4
model1 <- lm(weight ~ black + married + boy + tri1 + tri2 + tri3 + ed.hs + ed.smcol + ed.col + mom.age + smoke + cigsper + m.wtgain + mom.age2, data = DATA)
summary(model1)
#1
library(tidyverse)
library(ggplot2)
plot1 <- DATA %>% select(mom.age, smoke) %>% filter(smoke == 1) %>% group_by(mom.age) %>% count(smoke)
ggplot(data = plot1)+
geom_point(aes(x = mom.age, y = n), position = position_stack(reverse = TRUE))+
labs(title = "Pregnancy Women Smoke over Ages", x = "Mom's age", y = "Population")
plot2 <- DATA %>% select(mom.age, smoke) %>% group_by(mom.age) %>% count(smoke)
plot2$smoke <- as.integer(plot1$smoke)
plot2$smoke <- plot2$smoke %>% factor(c(1,0))
ggplot(data = plot2)+
geom_col(aes(x = mom.age, y = n, fill = smoke), position = position_stack(reverse = TRUE))+
scale_fill_manual(values = c("1" = "blue", "0" = "black"),
labels = c("1" = "yes", "0" = "no")) +
labs(title = "Pregnancy Women Smoke over Ages", x = "Mom's age", y = "Population")
#####################################
#2
pvals
alpha <- pvals < 0.05
alpha
ListLabels[alpha]
#Bonferroni correction
new_alpha <- 0.05/45
alpha2 <- pvals < new_alpha
alpha2
ListLabels[alpha2]
####################################
#3
#Mother's weight and average weight
DATA_PIVOT <- DATA %>%
group_by(mom.age) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
qplot(DATA_PIVOT$mom.age, DATA_PIVOT$average_weight)
#Smoker vs. non-smoker and average weight
DATA_PIVOT2 <- DATA %>%
group_by(smoke) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
barplot(DATA_PIVOT2$average_weight, names.arg=DATA_PIVOT2$smoke, xlab = "Smoker", ylab = "Average Weight")
#Cigarettes per day and average weight
DATA_PIVOT3 <- DATA %>%
group_by(cigsper) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
qplot(DATA_PIVOT3$cigsper, DATA_PIVOT3$average_weight)
######################################
#4
model1 <- lm(weight ~ black + married + boy + tri1 + tri2 + tri3 + ed.hs + ed.smcol + ed.col + mom.age + smoke + cigsper + m.wtgain + mom.age2, data = DATA)
summary(model1)
plot1 <- DATA %>% select(mom.age, smoke) %>% filter(smoke == 1) %>% group_by(mom.age) %>% count(smoke)
ggplot(data = plot1)+
geom_point(aes(x = mom.age, y = n), position = position_stack(reverse = TRUE))+
labs(title = "Pregnancy Women Smoke over Ages", x = "Mom's age", y = "Population")
plot2 <- DATA %>% select(mom.age, smoke) %>% group_by(mom.age) %>% count(smoke)
plot2$smoke <- as.integer(plot1$smoke)
plot2$smoke <- plot2$smoke %>% factor(c(1,0))
ggplot(data = plot2)+
geom_col(aes(x = mom.age, y = n, fill = smoke), position = position_stack(reverse = TRUE))+
scale_fill_manual(values = c("1" = "blue", "0" = "black"),
labels = c("1" = "yes", "0" = "no")) +
labs(title = "Pregnancy Women Smoke over Ages", x = "Mom's age", y = "Population")
#####################################
#2
pvals
alpha <- pvals < 0.05
alpha
ListLabels[alpha]
#Bonferroni correction
new_alpha <- 0.05/45
alpha2 <- pvals < new_alpha
alpha2
ListLabels[alpha2]
####################################
#3
#Mother's weight and average weight
DATA_PIVOT <- DATA %>%
group_by(mom.age) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
qplot(DATA_PIVOT$mom.age, DATA_PIVOT$average_weight)
#Smoker vs. non-smoker and average weight
DATA_PIVOT2 <- DATA %>%
group_by(smoke) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
barplot(DATA_PIVOT2$average_weight, names.arg=DATA_PIVOT2$smoke, xlab = "Smoker", ylab = "Average Weight")
#Cigarettes per day and average weight
DATA_PIVOT3 <- DATA %>%
group_by(cigsper) %>%
summarize(average_weight = mean(weight, na.rm = TRUE))
qplot(DATA_PIVOT3$cigsper, DATA_PIVOT3$average_weight)
######################################
#4
model1 <- lm(weight ~ black + married + boy + tri1 + tri2 + tri3 + ed.hs + ed.smcol + ed.col + mom.age + smoke + cigsper + m.wtgain + mom.age2, data = DATA)
summary(model1)
library(ggplot2)
library(readr)
library(tidyverse)
read_csv(./ClassMaterials/customerchurn.csv)
customerChurn <- read_csv("./ClassMaterials/customerchurn.csv")
summary(customerChurn)
lendth(customerChurn)
lenth(customerChurn)
length(customerChurn)
View(customerChurn)
summary(customerChurn)
churned <- customerChurn %>% filter(Churn == "Yes")
customerChurn <- read_csv("./ClassMaterials/customerchurn.csv")
summary(customerChurn)
ggplot(data = customerChurn)+
geom_point(aes(x = MonthlyCharges, y= TotalCharges, color= Churn))
pivot_longer(customerChurn,
cols = c(3:20),
names_to = "Type",
values_to = "Values")
pivot_longer(customerChurn,
cols = 3:20,
names_to = "Type",
values_to = "Values")
?pivot_longer
pivot_longer(customerChurn,
cols = range(3,20),
names_to = "Type",
values_to = "Values")
glm(Churn ~ ., data = customerChurn)
plot(factor(Churn) ~ factor(InternService), data = customerChurn)
plot(factor(Churn) ~ factor(InternetService), data = customerChurn)
plot(factor(Churn) ~ gender, data = customerChurn)
plot(factor(Churn) ~ factor(gender), data = customerChurn)
plot(factor(Churn) ~ factor(tenure), data = customerChurn)
?plot
?plot(x ~ y)
glm(Churn ~ tenure + MonthlyCharges, data = customerChurn, family = "Binary")
glm(Churn ~ tenure + MonthlyCharges, data = customerChurn, family = "Binarial")
?glm
glm(Churn ~ tenure + MonthlyCharges, data = customerChurn, family = "binomial")
library(stringr)
customerChurn$Churn %>% str_replace_all("Yes", 1)
customerChurn$Churn %>% str_replace_all("Yes", "1")
customerChurn$Churn %>% str_replace_all("Yes", "1") %>% str_replace_all("No", "0") %>% as.numeric()
customerChurn$Churn <- customerChurn$Churn %>% str_replace_all("Yes", "1") %>% str_replace_all("No", "0") %>% as.numeric()
glm(Churn ~ tenure + MonthlyCharges, data = customerChurn, family = "binomial")
tree(Churn ~ tenure + MonthlyCharges , data = customerChurn)
?tree()
library(cli)
tree(Churn ~ tenure + MonthlyCharges , data = customerChurn)
randomForest(Churn ~ .-customerID, data = customerChurn,
nodesize = 5, ntree = 500, mtry = 4)
?randomForest
library(randomForest)
library(randomForest)
randomForest(Churn ~ .-customerID, data = customerChurn,
nodesize = 5, ntree = 500, mtry = 4)
library(tidyverse)
library(ggplot2)
library(readxl)
read_excel("C:/Users/Ya Chiao Tsai/OneDrive/桌面/Data.xlsx")
data <- read_excel("C:/Users/Ya Chiao Tsai/OneDrive/桌面/Data.xlsx")
View(data)
data %>% pivot_longer(names_to = Company, values_to = )
data %>% pivot_longer(names_to = "Company", values_to = c("Avg. Return","SD
"))
data %>% pivot_longer(names_to = "Company", values_to = c("Avg. Return","SD"))
data[-1,]
data[,-1]
data <- data[,-1]
data
data
pivot_longer(data, names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = 1:30, names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = c(1:30), names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = :, names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = range(1:30), names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = 1:30, names_to = "Company", values_to = c("a","b"))
pivot_longer(data, cols = 1:30, names_to = "Company", values_to = c("a"))
data <- read_excel("C:/Users/Ya Chiao Tsai/OneDrive/桌面/Data.xlsx")
data
pivot_longer(data, cols = 1:30, names_to = "Company", values_to = c("a"))
pivot_longer(data, cols = 1:31, names_to = "Company", values_to = c("a"))
pivot_longer(data, cols = 2:31, names_to = "Company", values_to = c("a"))
data <- pivot_longer(data, cols = 2:31, names_to = "Company", values_to = c("a"))
data <- read_excel("C:/Users/Ya Chiao Tsai/OneDrive/桌面/Data.xlsx")
data
long_data <- pivot_longer(data, cols = 2:31, names_to = "Company", values_to = c("a"))
ggplot(data = long_data)+
geom_point(aes(x = filter(long_data, 3 = "Avg. Return")))
AvgData <- long_data %>% filter("3" = "Avg. Return")
names(long_data)[1] <- "type"
AvgData <- long_data %>% filter(type = "Avg. Return")
AvgData <- long_data %>% filter(type == "Avg. Return")
long_data
ggplot()+
geom_point(data = AvgData, aes(x = filter(long_data, "3" = "Avg. Return"), y = a))
SDdata <- long_data %>% filter(type == "SD")
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a, color = Company))
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a, color = "Company"))
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))
lm(AvgData$a ~ SDdata$a)
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))+
geom_abline(intercept = 2.1778, slope = -0.1055)
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))+
geom_abline(intercept = 2.1778, slope = -0.1055)
lm(SDdata$a ~ AvgData$a)
ggplot()+
geom_point(aes(x = AvgData$a, y = SDdata$a))+
geom_abline(intercept = 8.3501, slope = -0.8768)
ggplot()+
geom_point(aes(x = SDdata$a, y = AvgData$a))+
geom_abline(intercept = 2.1778, slope = -0.1055)
install.packages("glmnet")
install.packages("glmnet")
library(glmnet)
