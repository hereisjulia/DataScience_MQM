---
title: "TermProject"
author: "Julia"
date: "2023-09-26"
output: html_document
---

```{r packages}
library(readr)
library(tidyverse)
library(ggplot2)
library(stringr)
```

```{r data import}
data <- read_csv("https://raw.githubusercontent.com/hereisjulia/DataScience_MQM/main/TermProject/Loan_default.csv")
```

```{r data overview}
str(data)
summary(data)
length(data)
count(data)
```
```{r plot}
ggplot(data=data)+
  geom_col(aes(x = Age, y = Default))
```
```{r plot}
ggplot(data=data)+
  geom_area(aes(x=Income, y=Default))
```
Data fro Correlation Map
```{r}
library(RColorBrewer)
library(corrplot)
testCorr <- data[,-c(1)]
testCorr$HasMortgage <- ifelse(testCorr$HasMortgage == "Yes", 1, 0)
testCorr$HasDependents <- ifelse(testCorr$HasDependents == "Yes", 1, 0)
testCorr$HasCoSigner <- ifelse(testCorr$HasCoSigner == "Yes", 1, 0)
testCorr <- testCorr[, -c(10,11,12,15)]
str(testCorr)
```
```{r plot}
Corr <- cor(testCorr)
Corr
CorrplotColor <- brewer.pal(n = 8, name = "BrBG")
corrplot(Corr, method = "color",col = CorrplotColor, tl.col = "black")
```


# Data Cleaning

```{r data}
data_drop <- c("LoanID")
data_clean <- data[, !names(data) %in% data_drop]
data_clean$HasMortgage <- ifelse(data_clean$HasMortgage == "Yes", 1, 0)
data_clean$HasDependents <- ifelse(data_clean$HasDependents == "Yes", 1, 0)
data_clean$HasCoSigner <- ifelse(data_clean$HasCoSigner == "Yes", 1, 0)

education_mapping <- c("High School"= 1, "Bachelor's" = 2, "Master's" = 3, "PhD" = 4)
data_clean$Education <- as.integer(factor(data_clean$Education, levels = names(education_mapping)))

EmploymentType_mapping <- c("Unemployed" = 0, "Self-employed" = 1,"Part-time" = 2, "Full-time" = 3)
data_clean$EmploymentType <- as.integer(factor(data_clean$EmploymentType, levels = names(EmploymentType_mapping)))

MaritalStatus_Mapping <- c("Single" = 0, "Divorced" = 1, "Married" = 2)
data_clean$MaritalStatus <- as.integer(factor(data_clean$MaritalStatus, levels = names(MaritalStatus_Mapping)))

LoanPurpose_mapping <- c("Other" = 0, "Auto" = 1, "Education" = 2, "Home" = 3, "Business" = 4)
data_clean$LoanPurpose <- as.integer(factor(data_clean$LoanPurpose, levels = names(LoanPurpose_mapping)))

data_clean
```

```{r plot}
library(corrplot)

Corr <- cor(data_clean)
Corr
CorrplotColor <- brewer.pal(n = 8, name = "BrBG")
corrplot(Corr, method = "color",col = CorrplotColor, tl.col = "black")
```

## Models
We want to know whether the customers will defualt on loans, so the outcome should be binary, and this is not a causal question.

Models we can use for this Binary question:

* Logistic Regression
* Decision Trees
* Random Forest
* K-Nearest Neighbors

### OOS split
```{r}
set.seed(123456) 
train_indices <- sample(1:nrow(data_clean), 0.8 * nrow(data_clean))
train_data <- data_clean[train_indices, ]
test_data <- data_clean[-train_indices, ]  
```

### logistic regression
```{r}
logisticRegression <- glm(Default~., data = train_data, family = "binomial")
logistic_pred <- predict(logisticRegression, newdata = test_data)

summary(logisticRegression)
```

### Decision Trees
```{r}
library(party)
Tree <- ctree(Default~., data = train_data)
Tree_pred <- predict(Tree, newdata = test_data)
```


### Random Forest
```{r}
library(randomForest)
randomForest <- randomForest(Default~., data = train_data, ntree = 100, mtry = 34, importance = TRUE)
randomForest_pred <- predict(randomForest, newdata = test_data)
```


## Choosing Variables



## Evaluation











